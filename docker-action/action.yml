name: "Build docker image"

description: "Build docker image"

inputs:
  container_registry_url:
    required: true
    description: "container_registry_url"
  container_registry_path:
    required: true
    description: "container_registry_path"
  container_registry_user:
    required: true
    description: "container_registry_user"
  container_registry_pass:
    required: true
    description: "container_registry_pass"
  custom_image_name:
    required: false
    description: "Custom image name"
  custom_tags:
    required: false
    description: "Custom image tags"
    default: ${{ github.run_number }}
  context_path:
    required: false
    description: "context_path"
    default: '.'

runs:
  using: "composite"
  steps:
    - name: Log into registry - ${{ inputs.container_registry }}
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.container_registry_url }}
        username: ${{ inputs.container_registry_user }}
        password: ${{ inputs.container_registry_pass }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.container_registry_url }}/${{ inputs.container_registry_path }}/${{ github.event.repository.name }}
        tags: |
          type=ref,suffix=-${{ github.run_number}},event=branch
          type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context_path }}
        builder: ${{steps.builder.outputs.name}}
        build-args: |
          APP_NAME=${{ github.event.repository.name }}
          git_branch=${{ github.ref_name }}
        pull: false
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
